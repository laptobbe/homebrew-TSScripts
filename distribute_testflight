#!/usr/bin/env ruby

require "optparse"
require "ostruct"
require "colorize"

def parse_args
	options = OpenStruct.new

	ARGV.options do |opts|
		opts.banner = "Usage:  #{File.basename($PROGRAM_NAME)} -l LIST -t TEAM_TOKEN [--notify]"
		
		opts.separator ""
		opts.separator "Specific Options:"
		
		opts.on("-l", "--list LIST", "The distibution list to send the build to") do |list|
			options.list = list
		end

		opts.on("-t", "--team_token TEAM_TOKEN", "Testflight team token") do |team|
			options.team = team
		end 

		opts.on("-n", "--notify", "Include to notify via email about the build") do
			options.notify = true
		end
		
		opts.separator "Common Options:"
		
		opts.on( "-h", "--help",
		         "Show this message." ) do
			puts opts
			exit
		end
		
		begin
			opts.parse!
			raise if options.list.nil?
			raise if options.team.nil?
		rescue
			puts $!
			puts opts
			exit
		end
	end
	return options
end

def check_git_clean
	abort "Uncommited changes, make sure everything is commited before you distribute".red unless `git status` =~ /working directory clean/
end

def find_ipa
	ipas = Dir.glob('*.ipa')
	abort "Could not find ONE ipa, found: #{ipas}".red unless ipas.length == 1
	return ipas[0]
end

def verify_ipa(ipa)
	system "ipa info #{ipa}"
	puts "Verify the ipa information is it correct (Y/n)"
	verification = gets.downcase.strip
	if verification != "y"
		abort "Ipa not validated by user".red
	end
end

def distribute(options)
	notify = options.notify.nil? ? nil : "--notify"
	system "ipa distribute:testflight --team_token #{options.team} --lists #{options.list} #{notify}"
end

check_git_clean()
options = parse_args()
ipa = find_ipa()
verify_ipa(ipa)
distribute(options)
